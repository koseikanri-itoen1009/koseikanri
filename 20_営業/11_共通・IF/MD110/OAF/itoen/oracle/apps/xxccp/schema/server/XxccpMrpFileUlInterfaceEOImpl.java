/*============================================================================
* ファイル名 : XxccpMrpFileUlInterfaceEOImpl.java
* 概要説明   : ファイルアップロードインタフェースエンティティオブジェクト
* バージョン : 1.0
*============================================================================
* 修正履歴
* 日付       Ver. 担当者       修正内容
* ---------- ---- ------------ ----------------------------------------------
* 2008-11-13 1.0  SCS KUME     新規作成
*============================================================================
*/
package itoen.oracle.apps.xxccp.schema.server;
import itoen.oracle.apps.xxccp.util.XxccpConstants;

import oracle.apps.fnd.framework.server.OADBTransaction;
import oracle.apps.fnd.framework.server.OAEntityImpl;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.BlobDomain;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class XxccpMrpFileUlInterfaceEOImpl extends OAEntityImpl 
{
  protected static final int FILEID = 0;
  protected static final int FILENAME = 1;
  protected static final int FILECONTENTTYPE = 2;
  protected static final int FILEDATA = 3;
  protected static final int FILEFORMAT = 4;
  protected static final int CREATEDBY = 5;
  protected static final int CREATIONDATE = 6;
  protected static final int LASTUPDATEDBY = 7;
  protected static final int LASTUPDATEDATE = 8;
  protected static final int LASTUPDATELOGIN = 9;
  protected static final int REQUESTID = 10;
  protected static final int PROGRAMAPPLICATIONID = 11;
  protected static final int PROGRAMID = 12;
  protected static final int PROGRAMUPDATEDATE = 13;






  private static oracle.apps.fnd.framework.server.OAEntityDefImpl mDefinitionObject;

  /**
   * 
   * This is the default constructor (do not remove)
   */
  public XxccpMrpFileUlInterfaceEOImpl()
  {
  }

  /**
   * 
   * Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject()
  {
    if (mDefinitionObject == null)
    {
      mDefinitionObject = (oracle.apps.fnd.framework.server.OAEntityDefImpl)EntityDefImpl.findDefObject("itoen.oracle.apps.xxccp.schema.server.XxccpMrpFileUlInterfaceEO");
    }
    return mDefinitionObject;
  }

  /**
   * 
   * Add attribute defaulting logic in this method.
   */
  public void create(AttributeList attributeList)
  {
    super.create(attributeList);
    // シーケンスよりファイルIDを取得する。
    OADBTransaction transaction = getOADBTransaction();
    Number fileId = transaction.getSequenceValue("XXCCP_MRP_FILE_UL_S01");
    setFileId(fileId);
    // ファイルフォーマット情報を設定する。
    setFileFormat(XxccpConstants.CSV_NM);
    // Whoカラムを設定する。
    setCreatedBy(new Number(transaction.getUserId()));
    setCreationDate(transaction.getCurrentDBDate());
    setLastUpdatedBy(new Number(transaction.getUserId()));
    setLastUpdateDate(transaction.getCurrentDBDate());
    setLastUpdateLogin(new Number(transaction.getUserId()));
  }

  /**
   * 
   * Add entity remove logic in this method.
   */
  public void remove()
  {
    super.remove();
  }

  /**
   * 
   * Add Entity validation code in this method.
   */
  protected void validateEntity()
  {
    super.validateEntity();
  }

  /**
   * 
   * Gets the attribute value for FileId, using the alias name FileId
   */
  public Number getFileId()
  {
    return (Number)getAttributeInternal(FILEID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FileId
   */
  public void setFileId(Number value)
  {
    setAttributeInternal(FILEID, value);
  }

  /**
   * 
   * Gets the attribute value for FileName, using the alias name FileName
   */
  public String getFileName()
  {
    return (String)getAttributeInternal(FILENAME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FileName
   */
  public void setFileName(String value)
  {
    setAttributeInternal(FILENAME, value);
  }

  /**
   * 
   * Gets the attribute value for FileContentType, using the alias name FileContentType
   */
  public String getFileContentType()
  {
    return (String)getAttributeInternal(FILECONTENTTYPE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FileContentType
   */
  public void setFileContentType(String value)
  {
    setAttributeInternal(FILECONTENTTYPE, value);
  }

  /**
   * 
   * Gets the attribute value for FileData, using the alias name FileData
   */
  public BlobDomain getFileData()
  {
    return (BlobDomain)getAttributeInternal(FILEDATA);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FileData
   */
  public void setFileData(BlobDomain value)
  {
    setAttributeInternal(FILEDATA, value);
  }

  /**
   * 
   * Gets the attribute value for FileFormat, using the alias name FileFormat
   */
  public String getFileFormat()
  {
    return (String)getAttributeInternal(FILEFORMAT);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for FileFormat
   */
  public void setFileFormat(String value)
  {
    setAttributeInternal(FILEFORMAT, value);
  }

  /**
   * 
   * Gets the attribute value for CreatedBy, using the alias name CreatedBy
   */
  public Number getCreatedBy()
  {
    return (Number)getAttributeInternal(CREATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreatedBy
   */
  public void setCreatedBy(Number value)
  {
    setAttributeInternal(CREATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for CreationDate, using the alias name CreationDate
   */
  public Date getCreationDate()
  {
    return (Date)getAttributeInternal(CREATIONDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreationDate
   */
  public void setCreationDate(Date value)
  {
    setAttributeInternal(CREATIONDATE, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
   */
  public Number getLastUpdatedBy()
  {
    return (Number)getAttributeInternal(LASTUPDATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdatedBy
   */
  public void setLastUpdatedBy(Number value)
  {
    setAttributeInternal(LASTUPDATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate
   */
  public Date getLastUpdateDate()
  {
    return (Date)getAttributeInternal(LASTUPDATEDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateDate
   */
  public void setLastUpdateDate(Date value)
  {
    setAttributeInternal(LASTUPDATEDATE, value);
  }

  /**
   * 
   * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin
   */
  public Number getLastUpdateLogin()
  {
    return (Number)getAttributeInternal(LASTUPDATELOGIN);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateLogin
   */
  public void setLastUpdateLogin(Number value)
  {
    setAttributeInternal(LASTUPDATELOGIN, value);
  }

  /**
   * 
   * Gets the attribute value for RequestId, using the alias name RequestId
   */
  public Number getRequestId()
  {
    return (Number)getAttributeInternal(REQUESTID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for RequestId
   */
  public void setRequestId(Number value)
  {
    setAttributeInternal(REQUESTID, value);
  }

  /**
   * 
   * Gets the attribute value for ProgramApplicationId, using the alias name ProgramApplicationId
   */
  public Number getProgramApplicationId()
  {
    return (Number)getAttributeInternal(PROGRAMAPPLICATIONID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ProgramApplicationId
   */
  public void setProgramApplicationId(Number value)
  {
    setAttributeInternal(PROGRAMAPPLICATIONID, value);
  }

  /**
   * 
   * Gets the attribute value for ProgramId, using the alias name ProgramId
   */
  public Number getProgramId()
  {
    return (Number)getAttributeInternal(PROGRAMID);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ProgramId
   */
  public void setProgramId(Number value)
  {
    setAttributeInternal(PROGRAMID, value);
  }

  /**
   * 
   * Gets the attribute value for ProgramUpdateDate, using the alias name ProgramUpdateDate
   */
  public Date getProgramUpdateDate()
  {
    return (Date)getAttributeInternal(PROGRAMUPDATEDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ProgramUpdateDate
   */
  public void setProgramUpdateDate(Date value)
  {
    setAttributeInternal(PROGRAMUPDATEDATE, value);
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case FILEID:
        return getFileId();
      case FILENAME:
        return getFileName();
      case FILECONTENTTYPE:
        return getFileContentType();
      case FILEDATA:
        return getFileData();
      case FILEFORMAT:
        return getFileFormat();
      case CREATEDBY:
        return getCreatedBy();
      case CREATIONDATE:
        return getCreationDate();
      case LASTUPDATEDBY:
        return getLastUpdatedBy();
      case LASTUPDATEDATE:
        return getLastUpdateDate();
      case LASTUPDATELOGIN:
        return getLastUpdateLogin();
      case REQUESTID:
        return getRequestId();
      case PROGRAMAPPLICATIONID:
        return getProgramApplicationId();
      case PROGRAMID:
        return getProgramId();
      case PROGRAMUPDATEDATE:
        return getProgramUpdateDate();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case FILEID:
        setFileId((Number)value);
        return;
      case FILENAME:
        setFileName((String)value);
        return;
      case FILECONTENTTYPE:
        setFileContentType((String)value);
        return;
      case FILEDATA:
        setFileData((BlobDomain)value);
        return;
      case FILEFORMAT:
        setFileFormat((String)value);
        return;
      case CREATEDBY:
        setCreatedBy((Number)value);
        return;
      case CREATIONDATE:
        setCreationDate((Date)value);
        return;
      case LASTUPDATEDBY:
        setLastUpdatedBy((Number)value);
        return;
      case LASTUPDATEDATE:
        setLastUpdateDate((Date)value);
        return;
      case LASTUPDATELOGIN:
        setLastUpdateLogin((Number)value);
        return;
      case REQUESTID:
        setRequestId((Number)value);
        return;
      case PROGRAMAPPLICATIONID:
        setProgramApplicationId((Number)value);
        return;
      case PROGRAMID:
        setProgramId((Number)value);
        return;
      case PROGRAMUPDATEDATE:
        setProgramUpdateDate((Date)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }

  /**
   * 
   * Creates a Key object based on given key constituents
   */
  public static Key createPrimaryKey(Number fileId)
  {
    return new Key(new Object[] {fileId});
  }







}